substitutions:
  name: generator-rs232-bridge
  display_name: Generator RS232 Bridge

esphome:
  name: $name
  comment: $display_name

esp32:
  board: esp32dev
  framework:
    type: arduino

# Reiniciar dispositivo
switch:
  - platform: restart
    name: Restart $display_name
    icon: "mdi:restart"

# Enable logging
logger:
  # disable UART (serial) logging
  baud_rate: 0
  # Set level: DEBUG to see data returned from sensors (temp, wifi, rs232)
  level: INFO
  
# Enable Home Assistant API
api:

ota:
  password: !secret ota_password

wifi:
  #list of wifi networks to try to connect to
  networks:
    - ssid: !secret wifi_ssid_iot
      password: !secret wifi_password_iot
      bssid: !secret wifi_bssid_ap2
    - ssid: !secret wifi_ssid_iot
      password: !secret wifi_password_iot
      bssid: !secret wifi_bssid_ap1
    - ssid: !secret wifi_ssid_f
      password: !secret wifi_password_f

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "$name"
    password: !secret wifi_hotspot_password

captive_portal:

web_server:
  port: 80
  include_internal: true

external_components:
  - source: github://oxan/esphome-stream-server
uart:
  id: uart_bus
  baud_rate: 9600
  tx_pin: GPIO1
  rx_pin: GPIO3
  debug:
    direction: BOTH
    after:
      timeout: 100ms
    sequence:
      - lambda: UARTDebug::log_hex(direction, bytes, ' ');


stream_server:
  uart_id: uart_bus
  port: 6638

status_led:
  pin: GPIO2


dallas:
  - pin: GPIO4 # GPIO4 (pin 24)
    update_interval: 30s

sensor:
  # see https://esphome.io/components/sensor/dallas.html#getting-sensor-ids to find IDs
  - platform: dallas
    address: 0x5a3c29f6492d1d28
    name: "Generator Ambient Temperature"
  - platform: dallas
    address: 0x9e3c1ef649366328
    name: "Generator Engine Temperature"

  - platform: wifi_signal
    name: "$name WiFi Signal Sensor"
    update_interval: 60s

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "$name IP Address"
  - platform: version
    name: "$name ESPHome Version"
